{"version":3,"sources":["./src/app/sharedModule/shared/items-in-list/items-in-list.component.ts","./src/app/sharedModule/shared/items-in-list/items-in-list.component.html","./src/app/schemas/ItemSchema.ts"],"names":["componentStateService","disableAdd","stateName","viewOnly","ngOnInit","cartValue","length","tit","Map","get","this","item","itemCode","toString","quantity","console","log","addToCart","inc","newCart","set","localStorage","setItem","JSON","stringify","Array","from","entries","cartState","setState","map","delete","ItemsInListComponent","retriveItemFromLocalStore","id","lastValue","getItem","parse","e","error","varients","args","name","discp","price","rating","image","brand","new","old","value","totalCount"],"mappings":"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","file":"common.c50d5b5da6609b08d765.js","sourcesContent":["import { Component, Inject, Input, OnInit } from \"@angular/core\";\nimport { State, StateNames } from \"src/app/schemas/componentStateSchema\";\nimport {\n  ItemSchema,\n  Price,\n  retriveItemFromLocalStore,\n} from \"src/app/schemas/ItemSchema\";\nimport { ComponentStateService } from \"src/app/services/component-state.service\";\n\n@Component({\n  selector: \"items-in-list\",\n  templateUrl: \"./items-in-list.component.html\",\n  styleUrls: [\"./items-in-list.component.css\"],\n})\nexport class ItemsInListComponent implements OnInit {\n  @Input(\"item\") item: ItemSchema;\n  @Input(\"addMore\") addMoreQuatity;\n  @Input(\"id\") id: string;\n  @Input(\"disabled\") disableAdd?: boolean = false; //only enable it in the end user mode\n  stateName: string = \"addToCart\";\n\n  @Input(\"viewOnly\") viewOnly: boolean = false;\n  constructor(\n    private componentStateService: ComponentStateService,\n  ) { }\n\n  ngOnInit() {\n    // console.log(this.item);\n    const cartValue = retriveItemFromLocalStore(\"cartValue\");\n    if (cartValue.length > 0) {\n      let map = new Map(cartValue);\n      let tit: any = map.get(this.item.itemCode.toString());\n      if (tit) {\n        this.item.quantity = tit.quantity;\n        console.log('merged');\n     }\n    }\n  }\n\n  //state create update\n  addToCart(item: ItemSchema, inc?: number) {\n    const cartValue = retriveItemFromLocalStore(\"cartValue\");\n\n\n\n    if (cartValue.length <= 0) {\n      let newCart = new Map<string, any>();\n      item.quantity++;\n      newCart.set(item.itemCode.toString(), item);\n      this.item.quantity = item.quantity;\n      localStorage.setItem(\"cartValue\", JSON.stringify(Array.from(newCart.entries())));\n      let cartState = new State(StateNames.addToCart, JSON.stringify(Array.from(newCart.entries())));\n      this.componentStateService.setState(cartState);\n      return;\n    }\n    else {\n      let map = new Map(cartValue);\n      let tit: any = map.get(item.itemCode.toString());\n      if (tit) {\n        tit.quantity += inc;\n        this.item.quantity = tit.quantity;\n        if (tit.quantity == 0) {\n          map.delete(tit.itemCode.toString()); \n        } else {\n          map.set(item.itemCode.toString(), tit);\n        }\n        \n      } else {\n        item.quantity++;\n        map.set(item.itemCode.toString(), item);\n      }\n\n\n      localStorage.setItem(\"cartValue\", JSON.stringify(Array.from(map.entries())));\n\n      let cartState = new State(StateNames.addToCart, JSON.stringify(Array.from(map.entries())));\n      this.componentStateService.setState(cartState);\n      return;\n    }\n\n\n  }\n\n\n}","<div class=\"main-container\"  id=\"sss{{item?.itemCode}}\"  >\n  <div class=\"content\" >\n    <div class=\"product-img\">\n      <img [lazyLoad]=\"item?.image\" />\n    </div>\n    <div class=\"product-discp\">\n      <p class=\"brad-name\" [ngClass]=\"item?.brand? '' : 'noloader'\">\n        {{ item.brand }}\n      </p>\n      <span style=\"font-size: 10px\"> {{ item?.itemCode }}</span>\n      <p class=\"text\" [ngClass]=\"item?.itemCode? '' : 'noloader'\">\n        {{ item.name|| '' | sanitizeme }}\n      </p>\n      <div class=\"rating\" [ngClass]=\"item.rating ? '' : 'noloader'\" *ngIf=\"item?.rating?.value\">\n        <span class=\"rating-value\" style=\"background-color: rgb(227, 235, 218); color: rgb(104, 159, 56)\">\n          {{ item?.rating?.value }}\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"10\" viewBox=\"0 0 26 26\">\n            <path f    ill=\"#689f38\" fill-rule=\"nonzero\"\n              d=\"M19.72 16.183l.9 5.254a2 2 0 0 1-2.902 2.108l-4.485-2.358a.5.5 0 0 0-.466 0l-4.485 2.358a2 2 0 0 1-2.902-2.108l.9-5.254-3.816-3.72A2 2 0 0 1 3.572 9.05l5.275-.767 2.36-4.78a2 2 0 0 1 3.586 0l2.36 4.78 5.275.767a2 2 0 0 1 1.108 3.411l-3.817 3.721z\">\n            </path>\n          </svg>\n        </span>\n        <span class=\"rating-count\">\n          {{ item?.rating?.totalCount }} Ratings</span>\n      </div>\n\n      <select class=\"btn option\" [ngClass]=\"item.varients.length > 0 ? '' : 'noloader'\"\n        *ngIf=\"item?.varients?.length > 0\">\n        <div>\n          <option *ngFor=\"let varient of item?.varients\">{{ varient }}</option>\n        </div>\n      </select>\n\n      <!-- <div class =\"text\">{{item?.discp}}</div> -->\n      <div class=\"price\" [ngClass]=\"item.price ? 'ee' : 'noloader'\">\n        <span class=\"new\" *ngIf=\"item?.price\"> ₹{{ item?.price?.new }} </span>\n        <span class=\"old\" *ngIf=\"item?.price\"> ₹{{ item?.price?.old }} </span>\n      </div>\n    </div>\n  </div>\n  <div class=\"card-footer-action\" *ngIf=\"item && item?.itemCode && !viewOnly\" >\n    <div class=\"sales-batch noloader\">Super Sale</div>\n    <button class=\"btn add-to-cart\" *ngIf=\"item.quantity > 0\" (click)=\"addToCart(item,1)\">+</button>\n    <button class=\"btn add-to-cart\" [disabled]=\"disableAdd\" (click)=\"addToCart(item,1)\" style=\"width: 20%;\">\n      {{ item.quantity > 0 ? item.quantity : \"ADD\" }}\n    </button>\n    <button class=\"btn add-to-cart\" *ngIf=\"item.quantity > 0\" (click)=\"addToCart(item,-1)\">-</button>\n  </div>\n</div>","export class Rating {\n  value: number;\n  totalCount: number;\n}\n\nexport class Price {\n  new: number;\n  old: number;\n}\n\nexport class ItemSchema {\n  name: string;\n  id: string;\n  itemCode: number = null;\n  discp: string;\n  price: Price;\n  varients: any[] = [\"None\"];\n  rating: Rating;\n  image: string;\n  brand: string;\n  quantity: number = 0;\n\n  constructor(...args) {\n    const { name, id, discp, price, varients, rating, image, brand, } = args[0];\n    this.name = name;\n    this.id = id;\n    this.discp = discp;\n    this.varients = varients;\n    this.rating = rating;\n    this.price = price;\n    this.image = image;\n    this.brand = brand;\n    this.quantity = 0;\n  }\n}\n\n\n\n\nexport const DummyItem = new ItemSchema({\n  name: \"kent Ro Purifier Mineral RO water Purifier\",\n  price: { new: 9000, old: 12000 },\n  discp: \"Minaral RO water Purifier\",\n  varients: [\"RO\", \"Ro + UV \"],\n  rating: { value: \"4.2\", totalCount: \"200\" },\n  image:\n    \"https://www.bigbasket.com/media/uploads/p/m/40018854_4-himalaya-purifying-neem-face-wash.jpg\",\n  brand: \"Kent\",\n});\n\nexport function retriveItemFromLocalStore(id): any[] {\n  let lastValue = localStorage.getItem(id);\n  if (lastValue && lastValue.length > 0) {\n    try {\n      return JSON.parse(localStorage.getItem(id));\n    } catch (e) {\n      console.error(\"JSon parse failed\");\n      return [];\n    }\n  }\n  return [];\n}"],"sourceRoot":"webpack:///"}